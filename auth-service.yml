server:
  port: 8085

spring:
  datasource:
    url: jdbc:postgresql://localhost:5437/auth_db
    # url: jdbc:postgresql://postgres-auth-db:5432/auth_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: false

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

auth:
  jwt:
    secretKey: ${JWT_SECRET:defaultSecretKey}
    expirationDays: ${JWT_EXPIRATION_DAYS:30}
    issuer: karate-management-system-backend

eureka:
  instance:
    instance-id: ${spring.application.name}:${server.port}
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
      # defaultZone: http://service-registry:8761/eureka/

management:
  endpoints:
    web:
      exposure:
        include: health,info,loggers,metrics,prometheus,refresh,resilience4j*
  endpoint:
    refresh:
      enabled: true
  tracing:
    enabled: true
    sampling:
      probability: 0.1   # PROD: tylko część requestów
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
      # endpoint: http://zipkin:9411/api/v2/spans

logging:
  level:
    root: INFO
    com.karate: INFO

resilience4j:
  circuitbreaker:
    instances:
      userService:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
      clubService:
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
  retry:
    instances:
      userService:
        maxAttempts: 3
        waitDuration: 200ms
      clubService:
        maxAttempts: 3
        waitDuration: 200ms
  timelimiter:
    instances:
      userService:
        timeoutDuration: 2s
