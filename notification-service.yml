server:
  port: 8087

spring:
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: notification-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.use.type.headers: false
        spring.json.trusted.packages: "*"

  mail:
    host: ${MAIL_HOST:localhost}
    port: ${MAIL_PORT:3025}
    username: ${MAIL_USERNAME:defaultUsername}
    password: ${MAIL_PASSWORD:defaultPassword}
    properties:
      mail:
        smtp:
          auth: ${MAIL_SMTP_AUTH:false}
          starttls:
            enable: ${MAIL_SMTP_STARTTLS:false}
      timeout: ${MAIL_PROPERTIES_TIMEOUT:5000}
      connectiontimeout: ${MAIL_PROPERTIES_CONNECTION_TIMEOUT:5000}
      writetimeout: ${MAIL_PROPERTIES_WRITE_TIMEOUT:5000}

app:
  mail:
    from: ${APP_MAIL_FROM:no-reply@karate.local}
    fromName: ${APP_MAIL_FROM_NAME:Karate Management System}

topics:
  user-registered: ${TOPIC_USER_REGISTERED:user-events}
  enrollment-created: ${TOPIC_ENROLLMENT_CREATED:enrollment-events}
  feedback-created: ${TOPIC_FEEDBACK_CREATED:feedback-events}

auth:
  jwt:
    secretKey: ${JWT_SECRET:defaultSecretKey}
    expirationDays: ${JWT_EXPIRATION_DAYS:30}
    issuer: karate-management-system-backend

eureka:
  instance:
    instance-id: ${spring.application.name}:${server.port}
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
      # defaultZone: http://service-registry:8761/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    mail:
      enabled: false
  endpoint:
    refresh:
      enabled: true
  tracing:
    enabled: true
    sampling:
      probability: 0.1   # PROD: tylko część requestów
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
      # endpoint: http://zipkin:9411/api/v2/spans

logging:
  level:
    root: INFO
    com.karate: INFO
